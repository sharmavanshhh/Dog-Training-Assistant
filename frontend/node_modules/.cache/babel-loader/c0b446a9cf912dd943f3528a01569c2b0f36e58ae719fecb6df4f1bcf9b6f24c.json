{"ast":null,"code":"var _jsxFileName = \"E:\\\\dog-trainer-chatbot\\\\frontend\\\\src\\\\components\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport MessageBubble from \"./MessageBubble\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId] = useState(Date.now().toString());\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    socket.on(\"bot_response\", data => {\n      setIsTyping(true);\n      setStreamingResponse(prev => prev + data.response);\n    });\n    socket.on(\"bot_response_end\", () => {\n      setIsTyping(false);\n    });\n    return () => {\n      socket.off(\"bot_response\");\n      socket.off(\"bot_response_end\");\n    };\n  }, []);\n  useEffect(() => {\n    if (streamingResponse) {\n      setMessages(prevMessages => {\n        const updatedMessages = [...prevMessages];\n        if (updatedMessages.length > 0 && updatedMessages[updatedMessages.length - 1].sender === \"bot\") {\n          updatedMessages[updatedMessages.length - 1].text = streamingResponse;\n        }\n        return updatedMessages;\n      });\n    }\n    scrollToBottom();\n  }, [streamingResponse]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      var _messagesEndRef$curre;\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }, 100);\n  };\n  const sendMessage = () => {\n    if (!input.trim()) return;\n    setMessages(prevMessages => [...prevMessages, {\n      sender: \"user\",\n      text: input\n    }]);\n    setStreamingResponse(\"\");\n    setMessages(prevMessages => [...prevMessages, {\n      sender: \"bot\",\n      text: \"\"\n    }]);\n    socket.emit(\"user_message\", {\n      session_id: sessionId,\n      message: input\n    });\n    setInput(\"\");\n  };\n  const generateSummary = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/generate_summary\", {\n        session_id: sessionId\n      });\n      alert(\"Chat Summary:\\n\" + response.data.summary);\n    } catch (error) {\n      console.error(\"Error generating summary:\", error);\n    }\n  };\n  const downloadChat = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/download_chat\", {\n        session_id: sessionId\n      }, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `chat_session_${sessionId}.pdf`);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      console.error(\"Error downloading chat:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n        sender: msg.sender,\n        text: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(MessageBubble, {\n        sender: \"bot\",\n        text: \"...typing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && sendMessage(),\n        placeholder: \"Ask anything...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u2794\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateSummary,\n        children: \"Generate Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadChat,\n        children: \"Download Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"1q+Xmb3dGOKL8OR+KKyqTFqv/vA=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","axios","MessageBubble","jsxDEV","_jsxDEV","socket","ChatBox","_s","messages","setMessages","input","setInput","sessionId","Date","now","toString","streamingResponse","setStreamingResponse","isTyping","setIsTyping","messagesEndRef","on","data","prev","response","off","prevMessages","updatedMessages","length","sender","text","scrollToBottom","setTimeout","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","emit","session_id","message","generateSummary","post","alert","summary","error","console","downloadChat","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/dog-trainer-chatbot/frontend/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport MessageBubble from \"./MessageBubble\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nconst ChatBox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [sessionId] = useState(Date.now().toString());\r\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"bot_response\", (data) => {\r\n      setIsTyping(true);\r\n      setStreamingResponse((prev) => prev + data.response);\r\n    });\r\n\r\n    socket.on(\"bot_response_end\", () => {\r\n      setIsTyping(false);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"bot_response\");\r\n      socket.off(\"bot_response_end\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (streamingResponse) {\r\n      setMessages((prevMessages) => {\r\n        const updatedMessages = [...prevMessages];\r\n        if (updatedMessages.length > 0 && updatedMessages[updatedMessages.length - 1].sender === \"bot\") {\r\n          updatedMessages[updatedMessages.length - 1].text = streamingResponse;\r\n        }\r\n        return updatedMessages;\r\n      });\r\n    }\r\n    scrollToBottom();\r\n  }, [streamingResponse]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    setTimeout(() => {\r\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, 100);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (!input.trim()) return;\r\n\r\n    setMessages((prevMessages) => [...prevMessages, { sender: \"user\", text: input }]);\r\n    setStreamingResponse(\"\");\r\n    setMessages((prevMessages) => [...prevMessages, { sender: \"bot\", text: \"\" }]);\r\n\r\n    socket.emit(\"user_message\", { session_id: sessionId, message: input });\r\n    setInput(\"\");\r\n  };\r\n\r\n  const generateSummary = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/generate_summary\", { session_id: sessionId });\r\n      alert(\"Chat Summary:\\n\" + response.data.summary);\r\n    } catch (error) {\r\n      console.error(\"Error generating summary:\", error);\r\n    }\r\n  };\r\n\r\n  const downloadChat = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/download_chat\", { session_id: sessionId }, { responseType: \"blob\" });\r\n\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", `chat_session_${sessionId}.pdf`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error(\"Error downloading chat:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-box\">\r\n        {messages.map((msg, index) => (\r\n          <MessageBubble key={index} sender={msg.sender} text={msg.text} />\r\n        ))}\r\n        {isTyping && <MessageBubble sender=\"bot\" text=\"...typing\" />}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\r\n          placeholder=\"Ask anything...\"\r\n        />\r\n        <button onClick={sendMessage}>➔</button>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button onClick={generateSummary}>Generate Summary</button>\r\n        <button onClick={downloadChat}>Download Chat</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}