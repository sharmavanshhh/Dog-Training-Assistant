{"ast":null,"code":"var _jsxFileName = \"E:\\\\dog-trainer-chatbot\\\\frontend\\\\src\\\\components\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport MessageBubble from \"./components/MessageBubble,jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\"); // Connect to Flask WebSocket\n\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sessionId = \"session_123\"; // Temporary session ID (later generate dynamically)\n\n  useEffect(() => {\n    socket.on(\"bot_response\", data => {\n      setMessages(prev => [...prev, {\n        text: data.response,\n        sender: \"bot\"\n      }]);\n    });\n    return () => socket.off(\"bot_response\");\n  }, []);\n  const sendMessage = () => {\n    if (input.trim() === \"\") return;\n    setMessages(prev => [...prev, {\n      text: input,\n      sender: \"user\"\n    }]);\n    socket.emit(\"user_message\", {\n      session_id: sessionId,\n      message: input\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n        text: msg.text,\n        sender: msg.sender\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 border p-2 rounded-lg\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ml-2 bg-blue-500 text-white px-4 py-2 rounded-lg\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"Z7bPrZHR9DDxNUXxHtFz54hQVxg=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","io","MessageBubble","jsxDEV","_jsxDEV","socket","ChatBox","_s","messages","setMessages","input","setInput","sessionId","on","data","prev","text","response","sender","off","sendMessage","trim","emit","session_id","message","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/dog-trainer-chatbot/frontend/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport MessageBubble from \"./components/MessageBubble,jsx\";\r\n\r\nconst socket = io(\"http://localhost:5000\"); // Connect to Flask WebSocket\r\n\r\nconst ChatBox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const sessionId = \"session_123\"; // Temporary session ID (later generate dynamically)\r\n\r\n  useEffect(() => {\r\n    socket.on(\"bot_response\", (data) => {\r\n      setMessages((prev) => [...prev, { text: data.response, sender: \"bot\" }]);\r\n    });\r\n\r\n    return () => socket.off(\"bot_response\");\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    if (input.trim() === \"\") return;\r\n    setMessages((prev) => [...prev, { text: input, sender: \"user\" }]);\r\n\r\n    socket.emit(\"user_message\", { session_id: sessionId, message: input });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100\">\r\n      <div className=\"flex-1 overflow-y-auto p-4\">\r\n        {messages.map((msg, index) => (\r\n          <MessageBubble key={index} text={msg.text} sender={msg.sender} />\r\n        ))}\r\n      </div>\r\n      <div className=\"p-4 flex\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"flex-1 border p-2 rounded-lg\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button\r\n          className=\"ml-2 bg-blue-500 text-white px-4 py-2 rounded-lg\"\r\n          onClick={sendMessage}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}