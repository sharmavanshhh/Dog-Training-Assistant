{"ast":null,"code":"var _jsxFileName = \"E:\\\\dog-trainer-chatbot\\\\frontend\\\\src\\\\components\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport MessageBubble from \"./MessageBubble\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState(Date.now().toString());\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n  const chatContainerRef = useRef(null);\n  const messagesEndRef = useRef(null); // Reference to the last message\n  const [streamedResponse, setStreamedResponse] = useState(\"\"); // For live updates\n\n  useEffect(() => {\n    socket.on(\"bot_response\", data => {\n      setStreamingResponse(prev => prev + data.response);\n    });\n    return () => {\n      socket.off(\"bot_response\");\n    };\n  }, []);\n  useEffect(() => {\n    if (streamingResponse) {\n      setMessages(prevMessages => [...prevMessages.slice(0, -1), {\n        sender: \"\",\n        text: streamingResponse\n      }]);\n    }\n    scrollToBottom(); // Scroll when bot streams response\n  }, [streamingResponse]);\n  useEffect(() => {\n    scrollToBottom(); // Scroll when messages update\n  }, [messages]);\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      var _messagesEndRef$curre;\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }, 100); // Delayed scroll for smoother effect\n  };\n  const sendMessage = () => {\n    if (!input.trim()) return;\n    const newMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setStreamingResponse(\"\"); // Clear previous bot response\n    setMessages(prevMessages => [...prevMessages, {\n      sender: \"bot\",\n      text: \"\"\n    }]); // Add empty bot message\n\n    socket.emit(\"user_message\", {\n      session_id: sessionId,\n      message: input\n    });\n    setInput(\"\");\n  };\n  const generateSummary = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/generate_summary\", {\n        session_id: sessionId\n      });\n      alert(\"Chat Summary:\\n\" + response.data.summary);\n    } catch (error) {\n      console.error(\"Error generating summary:\", error);\n    }\n  };\n  const downloadChat = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/download_chat\", {\n        session_id: sessionId\n      }, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `chat_session_${sessionId}.pdf`);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      console.error(\"Error downloading chat:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      ref: chatContainerRef,\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n        sender: msg.sender,\n        text: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && sendMessage(),\n        placeholder: \"Ask anything...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u2794\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateSummary,\n        children: \"Generate Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadChat,\n        children: \"Download Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"Hld+Pz93PNpcAv/J+j9fan/2XIY=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","axios","MessageBubble","jsxDEV","_jsxDEV","socket","ChatBox","_s","messages","setMessages","input","setInput","sessionId","setSessionId","Date","now","toString","streamingResponse","setStreamingResponse","chatContainerRef","messagesEndRef","streamedResponse","setStreamedResponse","on","data","prev","response","off","prevMessages","slice","sender","text","scrollToBottom","setTimeout","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","newMessage","emit","session_id","message","generateSummary","post","alert","summary","error","console","downloadChat","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","className","children","ref","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/dog-trainer-chatbot/frontend/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport MessageBubble from \"./MessageBubble\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nconst ChatBox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [sessionId, setSessionId] = useState(Date.now().toString());\r\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\r\n  const chatContainerRef = useRef(null);\r\n  const messagesEndRef = useRef(null); // Reference to the last message\r\n  const [streamedResponse, setStreamedResponse] = useState(\"\"); // For live updates\r\n\r\n  useEffect(() => {\r\n    socket.on(\"bot_response\", (data) => {\r\n      setStreamingResponse((prev) => prev + data.response);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"bot_response\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (streamingResponse) {\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages.slice(0, -1),\r\n        { sender: \"\", text: streamingResponse }\r\n      ]);\r\n    }\r\n    scrollToBottom(); // Scroll when bot streams response\r\n  }, [streamingResponse]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom(); // Scroll when messages update\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    setTimeout(() => {\r\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, 100); // Delayed scroll for smoother effect\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const newMessage = { sender: \"user\", text: input };\r\n    setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n\r\n    setStreamingResponse(\"\"); // Clear previous bot response\r\n    setMessages((prevMessages) => [...prevMessages, { sender: \"bot\", text: \"\" }]); // Add empty bot message\r\n\r\n    socket.emit(\"user_message\", { session_id: sessionId, message: input });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  const generateSummary = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/generate_summary\", { session_id: sessionId });\r\n      alert(\"Chat Summary:\\n\" + response.data.summary);\r\n    } catch (error) {\r\n      console.error(\"Error generating summary:\", error);\r\n    }\r\n  };\r\n\r\n  const downloadChat = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/download_chat\", { session_id: sessionId }, { responseType: \"blob\" });\r\n\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", `chat_session_${sessionId}.pdf`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error(\"Error downloading chat:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-box\" ref={chatContainerRef}>\r\n        {messages.map((msg, index) => (\r\n          <MessageBubble key={index} sender={msg.sender} text={msg.text} />\r\n        ))}\r\n        {/* Invisible element to trigger auto-scroll */}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\r\n          placeholder=\"Ask anything...\" \r\n        />\r\n        <button onClick={sendMessage}>➔</button>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button onClick={generateSummary}>Generate Summary</button>\r\n        <button onClick={downloadChat}>Download Chat</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}